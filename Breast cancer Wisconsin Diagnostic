# Machine-learning-with-R
install.packages("class") # for /knn algorithm 
install.packages("gmodels") # for crosstable() function
install.packages("RCurl") # to read file from URL
library("class", lib.loc="~/R/win-library/3.3")
library("RCurl", lib.loc="~/R/win-library/3.3")
library("gmodels", lib.loc="~/R/win-library/3.3")
x <- getURL("https://raw.githubusercontent.com/stedy/Machine-Learning-with-R-datasets/master/wisc_bc_data.csv")
wbcd<- read.csv(text = x)
View(wbcd)
wbcd <-wbcd[-1] # remove column id
table(wbcd$diagnosis)
 wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B","M"), labels = c("Benign","Malignant"))
round(prop.table(table(wbcd$diagnosis))*100,digit=1)
summary(wbcd[c("radius_mean","area_mean","smoothness_mean")])
 normalize <- function(x) {
+      return ((x - min(x)) / (max(x) - min(x)))
+     }
> normalize( c( 1, 2, 3, 4, 5) ) # to check
normalize( c( 10, 20, 30, 40, 50) )
> wbcd_n <-as.data.frame(lapply(wbcd[2:31],normalize))
> View(wbcd_n)
> summary(wbcd_n$area_mean)
> wbcd_train <-wbcd_n[1:469, ]
> wbcd_test <-wbcd_n[470:569, ]
> wbcd_test_labels <-wbcd[470:569,1]
> wbcd_train_labels <-wbcd[1:469,1]
sqrt(469) # to assume the value of K
> wbcd_test_pred <-knn(train=wbcd_train, test = wbcd_test, cl = wbcd_train_labels,k=21)
 CrossTable(x = wbcd_test_labels, y = wbcd_test_pred, prop.chisq = FALSE)
round(prop.table(table(wbcd$diagnosis[470:569]))*100,digit=1)
 wbcd_z <-as.data.frame(scale(wbcd[-1])) #Zscore
> summary(wbcd_z$area_mean)
> wbcd_train_z<-wbcd_z[1:469, ]
> wbcd_test_z<-wbcd_z[470:569, ]
> wbcd_test_pred_z <-knn(train = wbcd_train_z, test = wbcd_test_z, cl = wbcd_train_labels, k = 21)
> CrossTable(x = wbcd_test_labels, y = wbcd_test_pred_z, prop.chisq = FALSE)
